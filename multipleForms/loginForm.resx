<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="exitPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>